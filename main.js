(()=>{"use strict";const e=new class{constructor(){this.fetchGif=this.fetchGif.bind(this)}async fetchGif(e){const t=document.querySelector(".main");await fetch(e,{mode:"cors"}).then((e=>{e.json().then((e=>{this.images=Object.values(e.data.images),t.setAttribute("style",`background: linear-gradient(to bottom, rgba(100, 100, 100, 0.8), \n        rgba(0, 0, 200, 0.5), rgba(0, 0, 0, 1)), \n        url(${this.images[0].url}) left top / cover no-repeat`)}))}))}},t=new class{constructor(){this.showSpinner=this.showSpinner.bind(this),this.listCities=this.listCities.bind(this),this.filterCities=this.filterCities.bind(this),this.showWeather=this.showWeather.bind(this),this.setPosition=this.setPosition.bind(this),this.showMessage=this.showMessage.bind(this),this.setMessage=this.setMessage.bind(this),this.switchTemperature=this.switchTemperature.bind(this),this.message=document.querySelector(".message")}setMessage(e){this.message.innerHTML=e}showMessage(e){return e?this.message.setAttribute("class","message d-flex"):this.message.setAttribute("class","message d-none")}showSpinner(e){this.spinner=document.querySelector(".spinner-border"),this.spinner.setAttribute("class","spinner-border "+(!0===e?"d-flex":"d-none"))}filterCities(e){return new Promise(((t,i)=>{try{return t(this.cities.map((({id:t,name:i})=>i.toLowerCase().startsWith(e.toLowerCase())?{id:t,name:i}:"fail")).filter((e=>"fail"!==e)))}catch(e){return i(e)}}))}switchTemperature(){const e=document.querySelector(".temperature");let t="";document.querySelector("#switch-temperature").checked?(this.temperature=1.8*parseFloat(this.temperature)+32,t="Fahrenheit"):(this.temperature=(parseFloat(this.temperature)-32)/1.8,t="celsius"),e.innerHTML=`Temperature: ${this.temperature.toLocaleString("en-IN",{maximumSignificantDigits:4})} ${t}`}setPosition(e){this.latitude=e.coords.latitude,this.longitude=e.coords.longitude,document.querySelector("#switch-temperature").addEventListener("click",this.switchTemperature,!1),this.showWeather()}async showWeather(t){this.showSpinner(!0),this.setMessage("Reading weather for the chosen city");let i="",s="";try{this.latitude&&this.longitude?(i=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${this.latitude}&lon=${this.longitude}&units=metric&appid=2adf01b5e325f219ebee645945fa0afa`,{method:"GET"}),s=`Current coordinates = latitude: ${this.latitude}, longitude: ${this.longitude}`):(i=await fetch(`https://api.openweathermap.org/data/2.5/weather?id=${t.target.id}&units=metric&appid=2adf01b5e325f219ebee645945fa0afa`,{method:"GET"}),s=t.target.innerText);const{weather:r,main:a}=await i.json(),{temp:n}=a;this.temperature=n;const o=document.querySelector(".card-title"),h=document.querySelector(".card-text"),c=document.querySelector(".temperature"),{description:d,main:u}=r[0];o.innerHTML=s,h.innerHTML=`${d}`,c.innerText=`Temperature: ${n}`,document.querySelector("#switch-temperature").checked=!1,await e.fetchGif(`https://api.giphy.com/v1/gifs/translate?api_key=xAnFWdRoLn8lovTUuq1pkhGAl6dXd253&s=${u}`),this.showSpinner(!1),this.showMessage(!1)}catch(e){this.setMessage(e),this.showMessage(!0)}}async listCities(){const e=document.querySelector(".search-city").value;if(this.longitude=null,this.latitude=null,e){this.showSpinner(!0),this.showMessage(!0),this.setMessage("Reading cities file");const t=await fetch("city.list.min.json");this.setMessage("File read, transforming in json"),this.cities=await t.json();const i=document.querySelector(".cities");this.setMessage("Fetching cities"),this.showMessage(!1),this.cities=await this.filterCities(e),i.innerHTML="",await this.cities.forEach((({id:e,name:t})=>{const s=document.createElement("li"),r=document.createElement("a");r.setAttribute("id",e),r.setAttribute("class","dropdown-item"),r.setAttribute("href","#"),r.innerText=t,s.appendChild(r),i.appendChild(s)})),document.querySelectorAll(".dropdown-item").forEach((e=>{e.addEventListener("click",this.showWeather,!1)})),document.querySelector(".select-cities").setAttribute("class","dropdown select-cities d-flex"),this.showSpinner(!1)}}};navigator.geolocation?navigator.geolocation.getCurrentPosition(t.setPosition):t.showMessage("Geolocation is not supported by this browser.",!0),document.querySelector(".submit-city").addEventListener("click",t.listCities,!1)})();